
start =
   exprOrEmpty

exprOrEmpty = 
   a:expression / a:'' {a==='' ? undefined : a}

expression =   
  atom  / atomList / quotedExpr

spaceExpression =
  _+ a:expression {return a}

atomList =
  _* '(' _* a:expression b:spaceExpression* _* ')' _*  { return [a].concat(b); }

validchar = 
   [0-9a-zA-Z_?!+\-=@#$%^&*/.]

atomString =
   a:validchar+ { return a.join(""); }

number =
   a:[1-9] b:[0-9]* { return parseFloat(a+b.join("")); }

atom =
   a:number / a:atomString { return a; }

_ = /* whitespace */
   [ \r\n\f\t] / ";;" [^\n]*

quotedExpr =
  "'" a:expression {return ['quote',a];}

